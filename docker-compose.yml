services:
  openplc:
    image: fdamador/openplc
    container_name: openplc_runtime
    ports:
      - "8080:8080"  # Web UI for OpenPLC
      - "502:502"    # Modbus/TCP port
    volumes:
      - ./plc_logic:/usr/src/app/plc_logic
    networks:
      - control_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  scada_dashboard:
    build:
      context: .
      dockerfile: Dockerfile.scada
    container_name: scada_dashboard
    depends_on:
      openplc:
        condition: service_healthy
    ports:
      - "5001:5000"  # Web dashboard port (external:internal)
    volumes:
      - .:/usr/src/app
    networks:
      - control_network
    command: python web_dashboard.py
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    
  scada_hmi:
    build:
      context: .
      dockerfile: Dockerfile.scada
    container_name: scada_hmi
    depends_on:
      openplc:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
    networks:
      - control_network
    command: python physical_process.py
    environment:
      - PYTHONUNBUFFERED=1
    profiles:
      - console  # This service only starts when explicitly requested

networks:
  control_network:
    driver: bridge